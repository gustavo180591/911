{# templates/denuncia/create.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Registrar Denuncia{% endblock %}

{% block body %}
<div class="container mt-4">
    <h1 class="mb-4">Registrar Nueva Denuncia</h1>

    {# Muestra mensajes flash de error (si los hay) #}
    {% for message in app.flashes('error') %}
        <div class="alert alert-danger">{{ message }}</div>
    {% endfor %}

    {{ form_start(form, { attr: { 'data-turbo': 'false' } }) }}

    {# Descripción #}
    <div class="mb-3">
        {{ form_label(form.descripcion) }}
        {{ form_widget(form.descripcion, { 'attr': {'class': 'form-control'} }) }}
        {{ form_errors(form.descripcion) }}
    </div>

    {# Fecha/Hora #}
    <div class="mb-3">
        {{ form_label(form.fechaHora) }}
        {{ form_widget(form.fechaHora, { 'attr': {'class': 'form-control'} }) }}
        {{ form_errors(form.fechaHora) }}
    </div>

    {# Subform Ubicación #}
    <h3>Datos de Ubicación</h3>
    <div class="mb-3">
        {{ form_row(form.ubicacion.calle) }}
    </div>
    <div class="mb-3">
        {{ form_row(form.ubicacion.numero) }}
    </div>
    <div class="mb-3">
        {{ form_row(form.ubicacion.detalles) }}
    </div>

    {# Campo "coordenadas" hidden #}
    {{ form_widget(form.ubicacion.coordenadas) }}

    {# Mapa Leaflet para ubicar #}
    <div id="map" style="width:100%;height:400px;"></div>

    {# Evidencias (colección dinámica) #}
    <div class="mb-3 mt-3">
        <h4>Evidencias</h4>
        {# 
           data-prototype contendrá el "template" de un sub-form.
           - e('html_attr') escapa caracteres especiales para que sea válido como HTML.
        #}
        <div id="evidencias-container" 
             data-prototype="{{ form_widget(form.evidencias.vars.prototype)|e('html_attr') }}">

            {# Renderizamos los subformularios existentes en la colección #}
            {% for evidForm in form.evidencias %}
                {{ form_row(evidForm) }}
            {% endfor %}
        </div>

        {# Botón para agregar nuevos sub-formularios de evidencia #}
        <button type="button" class="btn btn-secondary" id="add-evid-btn">Agregar Evidencia</button>
    </div>

    {# Botón final para enviar #}
    <button type="submit" class="btn btn-primary">
        {{ form.submit.vars.label|default('Registrar') }}
    </button>

    {{ form_end(form) }}

    <div class="mt-3">
        <a href="{{ path('emergency_index') }}" class="btn btn-secondary">Volver a la Lista</a>
    </div>
</div>

{# Librerías Leaflet #}
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<script>
(function() {
    let map;
    let marker;

    document.addEventListener('DOMContentLoaded', () => {
        initializeMap();
        setupDynamicEvidencias();
    });

    function initializeMap() {
        map = L.map('map').setView([-27.362778, -55.900555], 10);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        const redIcon = L.icon({
            iconUrl: '/images/marker-red.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34]
        });

        marker = L.marker([-27.362778, -55.900555], {
            draggable: true,
            icon: redIcon
        }).addTo(map).bindPopup('Ubicación aproximada').openPopup();

        // Al hacer clic en el mapa, mueve el marcador
        map.on('click', (e) => {
            const { lat, lng } = e.latlng;
            marker.setLatLng([lat, lng]).openPopup();
            // Rellena campo "coordenadas"
            document.getElementById('{{ form.ubicacion.coordenadas.vars.id }}').value = lat + ',' + lng;
        });

        // Al arrastrar el marcador
        marker.on('moveend', (e) => {
            const { lat, lng } = e.target.getLatLng();
            document.getElementById('{{ form.ubicacion.coordenadas.vars.id }}').value = lat + ',' + lng;
        });
    }

    // Lógica para agregar subformularios de evidencias dinámicamente
    function setupDynamicEvidencias() {
        const container = document.getElementById('evidencias-container');
        const addBtn    = document.getElementById('add-evid-btn');
        if (!container || !addBtn) return;

        // Vamos contando cuántos subformularios existen
        let index = container.querySelectorAll('.form-group').length; 
        // Ojo: a veces .form-group no coincide; usa un selector que sea consistente con tu markup

        addBtn.addEventListener('click', () => {
            // Obtiene el prototype
            let prototype = container.dataset.prototype;

            // Reemplaza __name__ con el índice actual
            // Symfony usa __name__ como placeholder para la clave del subform
            let newForm = prototype.replace(/__name__/g, index);
            index++;

            // Inserta el nuevo form en el contenedor
            let div = document.createElement('div');
            div.innerHTML = newForm;
            container.appendChild(div);
        });
    }
})();
</script>
{% endblock %}
