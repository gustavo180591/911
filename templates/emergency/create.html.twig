{% extends 'base.html.twig' %}

{% block title %}Registrar Emergencia{% endblock %}

{% block body %}
<div class="container mt-4">
    <h1 class="mb-4">Registrar Nueva Emergencia</h1>

    {% for message in app.flashes('error') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}

    {{ form_start(form) }}

    <div class="mb-3">
        {{ form_label(form.descripcion, 'Descripción de la Emergencia') }}
        {{ form_widget(form.descripcion, { 'attr': {'class': 'form-control'} }) }}
        {{ form_errors(form.descripcion) }}
    </div>

    <div class="mb-3">
    {{ form_label(form.fechaHora, 'Fecha y Hora del Incidente') }}
    {{ form_widget(form.fechaHora, { 'attr': {'class': 'form-control', 'readonly': 'readonly'} }) }}
    {{ form_errors(form.fechaHora) }}
    </div>

    <div class="mb-3">
        {{ form_label(form.direccion, 'Dirección') }}
        {{ form_widget(form.direccion, { 'attr': {'class': 'form-control', 'id': 'direccion-input', 'placeholder': 'Escribe la dirección...'} }) }}
        {{ form_errors(form.direccion) }}
    </div>

    <div id="map" style="width: 100%; height: 400px;" class="mt-3"></div>

    <div class="mb-3">
        <h3>Evidencias</h3>
        <ul class="evidencias" data-prototype="{{ form_widget(form.evidencias.vars.prototype)|e('html_attr') }}">
            {% for evidencia in form.evidencias %}
                <li>{{ form_row(evidencia) }}</li>
            {% endfor %}
        </ul>

        <button type="button" class="btn btn-secondary add_evidencia_link" data-collection-holder-class="evidencias">
            Agregar Evidencia
        </button>
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>

    {{ form_end(form) }}

    <div class="mt-3">
        <a href="{{ path('emergency_index') }}" class="btn btn-secondary">Volver a la Lista de Emergencias</a>
    </div>
</div>



<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<script>
    document.addEventListener('DOMContentLoaded', function() {
    // Inicializar el mapa centrado en Posadas
    const map = L.map('map').setView([-27.362778, -55.900555], 13);

    // Agregar la capa de tiles (OpenStreetMap)
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
    }).addTo(map);

    // Marcador inicial para Posadas
    let marker = L.marker([-27.362778, -55.900555], {
        icon: L.icon({
            iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x-red.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34]
        })
    }).addTo(map).bindPopup('Posadas, Misiones').openPopup();

    // Obtener el cuadro de texto de dirección
    const direccionInput = document.querySelector('#direccion-input');

    // Cuando el usuario escribe una dirección, obtener coordenadas
    direccionInput.addEventListener('change', function() {
        const direccion = direccionInput.value;

        // Llamar a un endpoint que convierta la dirección en coordenadas
        fetch(`/buscar-ubicacion?direccion=${encodeURIComponent(direccion)}`)
            .then(response => response.json())
            .then(data => {
                if (data.latitud && data.longitud) {
                    const latLng = [data.latitud, data.longitud];

                    // Mover el marcador rojo al nuevo lugar
                    marker.setLatLng(latLng).bindPopup(direccion).openPopup();

                    // Centrar el mapa en la nueva ubicación
                    map.setView(latLng, 15);
                } else {
                    alert('Ubicación no encontrada.');
                }
            })
            .catch(error => {
                console.error('Error al buscar la ubicación:', error);
            });
    });

    // Asegurar que el mapa se renderiza correctamente
    setTimeout(() => {
        map.invalidateSize();
    }, 500);
});
    // JavaScript para manejar la colección dinámica de evidencias
    document.addEventListener('DOMContentLoaded', function() {
        const addEvidenciaButton = document.querySelector('.add_evidencia_link');
        const evidenciasHolder = document.querySelector('ul.evidencias');

        addEvidenciaButton.addEventListener('click', function(e) {
            const prototype = evidenciasHolder.dataset.prototype;
            const index = evidenciasHolder.children.length;

            const newForm = prototype.replace(/__name__/g, index);
            const newFormLi = document.createElement('li');
            newFormLi.innerHTML = newForm;
            evidenciasHolder.appendChild(newFormLi);
        });
    });
    document.addEventListener('DOMContentLoaded', function() {
    const fechaHoraInput = document.querySelector('#{{ form.fechaHora.vars.id }}');
    
    if (fechaHoraInput) {
        const now = new Date();
        
        // Ajustar a zona horaria de Buenos Aires (-3)
        now.setHours(now.getHours() - 3);

        const formattedDate = now.toISOString().slice(0, 16); // Formato YYYY-MM-DDTHH:MM
        fechaHoraInput.value = formattedDate;
    }
});
</script>
{% endblock %}